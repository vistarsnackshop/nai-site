<?xml version="1.0" encoding="utf-8"?>
<!--
     This configuration file is required if iisnode is used to run node processes behind
     IIS or IIS Express.  For more information, visit:

     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->

<configuration>
  <system.webServer>
    <!-- WebSocket support -->
    <webSocket enabled="false" />

    <!-- Define handlers for server.js -->
    <handlers>
      <!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module -->
      <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
    </handlers>

    <rewrite>
      <rules>
        <!-- Do not interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server.js/debug[\/]?" />
        </rule>

        <!-- Rewrite rule to handle /nai path -->
        <rule name="AppSubPathRewrite">
          <match url="^nai/(.*)" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <!-- Map requests under /nai to server.js -->
          <action type="Rewrite" url="server.js" />
        </rule>

        <!-- First, consider whether the incoming URL matches a physical file in the /public folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}"/>
        </rule>

        <!-- All other URLs are mapped to the node.js site entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="server.js"/>
        </rule>
      </rules>
    </rewrite>
    
    <!-- Hide node_modules directory -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="node_modules"/>
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Ensure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />
    <iisnode node_env="production"/>

    <!--
      Control Node.js hosting with options such as:
        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
        * node_env: propagated as NODE_ENV environment variable
        * debuggingEnabled: controls whether the built-in debugger is enabled

      For a full list of options, visit the iisnode documentation.
    -->
    <!--<iisnode watchedFiles="web.config;*.js"/>-->
  </system.webServer>
</configuration>
